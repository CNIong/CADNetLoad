<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>